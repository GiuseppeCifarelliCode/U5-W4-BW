@model CuraVet.Models.Animale

@{
    ViewBag.Title = "AddAnimal";
}




@using (Html.BeginForm("AddAnimal", "Clinica", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
<div class="d-flex justify-content-evenly ">
    <div class="form-horizontal">
        <h4>𝐀𝐠𝐠𝐢𝐮𝐧𝐠𝐢 𝐮𝐧 𝐧𝐮𝐨𝐯𝐨 𝐚𝐧𝐢𝐦𝐚𝐥𝐞</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdTipologia, "Tipo Animale", htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdTipologia, new SelectList(ViewBag.ListTipo, "Value", "Text"), new { @class = "form-select" })
                @Html.ValidationMessageFor(model => model.IdTipologia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Razza, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Razza, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Razza, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Colore, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Colore, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Colore, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataNascita, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataNascita, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(model => model.DataNascita, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Microchip, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Microchip, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Microchip, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdCliente, "Padrone", htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdCliente, new SelectList(ViewBag.ListClienti, "Value", "Text"), new { @class = "form-select" })
                @Html.ValidationMessageFor(model => model.IdCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="fotoAnimale">
            @Html.LabelFor(model => model.Foto, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Foto, new { htmlAttributes = new { @class = "form-control", type = "file" } })
                @Html.ValidationMessageFor(model => model.Foto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default my-2" />
            </div>
        </div>
    </div>
    <img src="~/Content/assets/CatBox.png" class="w-50" />
</div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
            <script>
                let DdCliente = document.getElementById("IdCliente")
                DdCliente.addEventListener("change", (e) => {
                    if (DdCliente.value != "NULL") {
                        document.getElementById("fotoAnimale").classList.add("d-none")
                    } else {
                        document.getElementById("fotoAnimale").classList.remove("d-none")
                        document.getElementById("fotoAnimale").classList.add("d-block")
                    }
                })
            </script>
        }
